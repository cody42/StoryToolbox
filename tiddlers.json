[{"text":"\\define actions()\n<$set name=\"tags\" filter=\"[[Character]] [{$:/config/NewTiddler/Tags}]\">\n<$action-sendmessage\n  $message=\"tm-new-tiddler\"\n  tags=<<tags>>\n  name=\"\"\n  image=\"\"\n/>\n</$set>\n\\end\n\n<$button actions=<<actions>> class=<<tv-config-toolbar-class>> tooltip=\"Neuen Charakter hinzufügen\">\n<$list filter=\"[<tv-config-toolbar-icons>prefix[yes]]\">\n{{user-plus-solid.svg}}\n</$list>\n<$list filter=\"[<tv-config-toolbar-text>prefix[yes]]\">\n<span class=\"tc-btn-text\"><$text text=Charakter hinzufügen/></span>\n</$list>\n</$button>","title":"ButtonNewCharacter","tags":"$:/tags/PageControls StoryToolbox","modified":"20210307142420804","created":"20210228180608347"},{"text":"\\define icdate() {{StoryDate!!icyear}}-{{StoryDate!!icmonth}}-{{StoryDate!!icday}},{{StoryDate!!ichour}}:{{StoryDate!!icminute}}\n\\define actions()\n<$set name=\"tags\" filter=\"[[Story]] [{$:/config/NewTiddler/Tags}]\">\n<$wikify name=\"mydate\" text=<<icdate>>>\n<$action-sendmessage\n  $message=\"tm-new-tiddler\"\n  tags=<<tags>>\n  icdate=<<mydate>>\n/>\n</$wikify>\n</$set>\n\\end\n\n<$button actions=<<actions>> class=<<tv-config-toolbar-class>> tooltip=\"Neuen Storyeintrag hinzufügen\">\n<$list filter=\"[<tv-config-toolbar-icons>prefix[yes]]\">\n{{file-alt-solid.svg}}\n</$list>\n<$list filter=\"[<tv-config-toolbar-text>prefix[yes]]\">\n<span class=\"tc-btn-text\"><$text text=Storyeintrag Hinzufügen/></span>\n</$list>\n</$button>","title":"ButtonNewStory","tags":"$:/tags/PageControls StoryToolbox","modified":"20210307142420805","created":"20210228174709518"},{"text":"{\n  \"daysInAWeek\": 10,\n  \"months\": [\n    {\"name\": \"Tiefwinter\", \"days\": 30},\n    {\"name\": \"Wintermitte\", \"days\": 1, \"extra\": true},\n    {\"name\": \"Winterklauen\", \"days\": 30},\n    {\"name\": \"Sonnenuntergangsklauen\", \"days\": 30},\n    {\"name\": \"Sturmklauen\", \"days\": 30},\n    {\"name\": \"Grüngras\", \"days\": 1, \"extra\": true},\n    {\"name\": \"Schmelz\", \"days\": 30},\n    {\"name\": \"Blumenzeit\", \"days\": 30},\n    {\"name\": \"Sommerflut\", \"days\": 30},\n    {\"name\": \"Mittsommer\", \"days\": 1, \"extra\": true},\n    {\"name\": \"Hochsonne\", \"days\": 30},\n    {\"name\": \"Erblassen\", \"days\": 30},\n    {\"name\": \"Ernteflut\", \"days\": 1, \"extra\": true},\n    {\"name\": \"Blattfall\", \"days\": 30},\n    {\"name\": \"Rotten\", \"days\": 30},\n    {\"name\": \"Mondfest\", \"days\": 1, \"extra\": true},\n    {\"name\": \"Nierderzug\", \"days\": 30}\n  ],\n  \"description\": \"DnD Calendar of Harptos\"\n}","type":"application/json","title":"Calendar.json","tags":"StoryToolbox","modified":"20210415153624792","created":"20210228193813420"},{"text":"/*\\\ntitle: campaignDateAge\ntype: application/javascript\nmodule-type: macro\n\nTakes two dates and returns their difference in days\n\n\\*/\n(function(){\n\n\"use strict\";\n\n/*\nInformation about this macro\n*/\n\nexports.name = \"campaignDateAge\";\n\nexports.params = [\n\t{name: \"date\", default: \"00000101\"},\n\t{name: \"birth\", default: \"00000101\"}\n];\n\nfunction pluralize(num, word) {\n\tif(Math.abs(num) == 1) {\n\t\treturn num + word;\n\t} else {\n\t\treturn num + word + \"e\";\n\t}\n}\n\nfunction parseNat(str) {\n\treturn Math.max(Number.parseInt(str), 0);\n}\n\n/*\nRun the macro\n*/\nexports.run = function(date, birth) {\n    let retval = \"undefined age\";\n\n    const regex = /(?<year>-?\\d+)(?:-(?<month>\\d+)(?:-(?<day>\\d+)(?:,(?<hour>\\d{1,2})(?::(?<minute>\\d{1,2}))?)?)?)?/;\n    let m;\n\n    if((m = regex.exec(date)) === null) {\n      return \"invalid date: \"+date;\n    }\n\n    let fromDate = {year: Number.parseInt(m.groups.year),\n        month: parseNat(m.groups.month) || 1,\n        dayOfMonth: parseNat(m.groups.day) || 1,\n        hour: parseNat(m.groups.hour || \"12\"),\n        minute: parseNat(m.groups.minute) || 0\n      };\n\n    if((m = regex.exec(birth)) === null) {\n      return \"invalid date: \"+birth;\n    }\n\n    let toDate = {year: Number.parseInt(m.groups.year),\n        month: parseNat(m.groups.month) || 1,\n        dayOfMonth: parseNat(m.groups.day) || 1,\n        hour: parseNat(m.groups.hour || \"12\"),\n        minute: parseNat(m.groups.minute) || 0\n      };\n\n    let calendar = {};\n    try {\n\t    calendar = JSON.parse(this.wiki.getTextReference(\"Calendar.json\"));\n    } catch(err) {\n        return \"Invalid Calendar.json\";\n    }\n\n    if(toDate.month > calendar.months.length || fromDate.month > calendar.months.length) {\n      return \"age invalid month\";\n    }\n    if(toDate.dayOfMonth > calendar.months[toDate.month-1].days || fromDate.dayOfMonth > calendar.months[fromDate.month-1].days) {\n      return \"age invalid day\";\n    }\n\n    if(fromDate.year == toDate.year) {\n        if(fromDate.month == toDate.month) {\n            if(fromDate.dayOfMonth == toDate.dayOfMonth) {\n                retval = \"0 Tage\";\n            } else {\n\t\t\t\tif(fromDate.dayOfMonth > toDate.dayOfMonth) {\n  \t\t\t\t    retval = pluralize(Math.abs(fromDate.dayOfMonth - toDate.dayOfMonth), \" Tag\");\n\t\t\t\t} else {\n\t\t\t\t\tretval = \"---\";\n\t\t\t\t}\n\t\t\t}\n        } else if(fromDate.month > toDate.month) {\n\t\t\tlet days = fromDate.dayOfMonth - 1;\n\t\t\tlet months = 1;\n\t\t\tfor(let current = fromDate.month - 1; current != toDate.month; --current) {\n\t\t\t\tdays += calendar.months[current-1].days;\n\t\t\t\tif(!calendar.months[current-1].extra) {\n\t\t\t\t\tmonths += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(months > 1) {\n\t\t\t\tretval = pluralize(months, \" Monat\");\n\t\t\t} else {\n\t\t\t\tdays += calendar.months[toDate.month-1].days - toDate.dayOfMonth + 1;\n\t\t\t\tretval = pluralize(days, \" Tag\");\n\t\t\t}\n\t\t} else { //fromDate.month < toDate.month\n\t\t\tretval = \"---\";\n\t\t}\n    } else if(fromDate.year > toDate.year) {\n\t\tif(fromDate.year > toDate.year + 1 || fromDate.month > toDate.month) {\n            if(fromDate.month > toDate.month || (fromDate.month == toDate.month && fromDate.dayOfMonth > toDate.dayOfMonth)) {\n                retval = pluralize(fromDate.year - toDate.year, \" Jahr\");\n            } else {\n                retval = pluralize(fromDate.year - toDate.year - 1, \" Jahr\");\n            }\n\t\t} else {\n\t\t\tlet days = fromDate.dayOfMonth - 1;\n\t\t\tlet months = 1;\n\t\t\tfor(let current = fromDate.month - 1; current != toDate.month; --current) {\n\t\t\t\tif(current <= 0) {\n\t\t\t\t\tcurrent = calendar.months.length + 1;\n                    continue;\n\t\t\t\t}\n                console.log(\"current-1 \" + (current-1));\n\t\t\t\tdays += calendar.months[current-1].days;\n\t\t\t\tif(!calendar.months[current-1].extra) {\n\t\t\t\t\tmonths += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(months > 1) {\n\t\t\t\tretval = pluralize(months, \" Monat\");\n\t\t\t} else {\n\t\t\t\tdays += calendar.months[toDate.month-1].days - toDate.dayOfMonth + 1;\n\t\t\t\tretval = pluralize(days, \" Tag\");\n\t\t\t}\n\t\t}\n\t} else { //fromDate.year < toDate.year\n\t\tretval = \"---\";\n\t}\n\n\treturn retval;\n};\n\n})();","type":"application/javascript","title":"campaignDateAge.js","tags":"$:/tags/Macro StoryToolbox","module-type":"macro","modified":"20210415155321422","created":"20210304220539101"},{"text":"/*\\\ntitle: campaignDateDifference\ntype: application/javascript\nmodule-type: macro\n\nTakes two dates and returns their difference in days\n\n\\*/\n(function(){\n\n\"use strict\";\n\n/*\nInformation about this macro\n*/\n\nexports.name = \"campaignDateDifference\";\n\nexports.params = [\n\t{name: \"from\", default: \"00000101\"},\n\t{name: \"to\", default: \"00000101\"}\n];\n\nfunction pluralize(num, word) {\n\tif(Math.abs(num) == 1) {\n\t\treturn num + word;\n\t} else {\n\t\treturn num + word + \"en\";\n\t}\n}\n\nfunction parseNat(str) {\n\treturn Math.max(Number.parseInt(str), 0);\n}\n\n/*\nRun the macro\n*/\nexports.run = function(from, to) {\n    let retval = \"undefined difference\";\n\n    const regex = /(?<year>-?\\d+)(?:-(?<month>\\d+)(?:-(?<day>\\d+)(?:,(?<hour>\\d{1,2})(?::(?<minute>\\d{1,2}))?)?)?)?/;\n    let m;\n\n    if((m = regex.exec(from)) === null) {\n      return \"invalid date: \"+from;\n    }\n\n    let fromDate = {year: Number.parseInt(m.groups.year),\n        month: parseNat(m.groups.month) || 1,\n        dayOfMonth: parseNat(m.groups.day) || 1,\n        hour: parseNat(m.groups.hour || \"12\"),\n        minute: parseNat(m.groups.minute) || 0\n      };\n\n    if((m = regex.exec(to)) === null) {\n      return \"invalid date: \"+to;\n    }\n\n    let toDate = {year: Number.parseInt(m.groups.year),\n        month: parseNat(m.groups.month) || 1,\n        dayOfMonth: parseNat(m.groups.day) || 1,\n        hour: parseNat(m.groups.hour || \"12\"),\n        minute: parseNat(m.groups.minute) || 0\n      };\n\n    let calendar = {};\n    try {\n\t    calendar = JSON.parse(this.wiki.getTextReference(\"Calendar.json\"));\n    } catch(err) {\n        return \"Invalid Calendar.json\";\n    }\n\n    if(toDate.month > calendar.months.length || fromDate.month > calendar.months.length) {\n      return \"vor/in invalid month\";\n    }\n    if(toDate.dayOfMonth > calendar.months[toDate.month-1].days || fromDate.dayOfMonth > calendar.months[fromDate.month-1].days) {\n      return \"vor/in invalid day\";\n    }\n\n    if(fromDate.year == toDate.year) {\n        if(fromDate.month == toDate.month) {\n            if(fromDate.dayOfMonth == toDate.dayOfMonth) {\n                retval = \"heute\";\n            } else {\n\t\t\t\tif(fromDate.dayOfMonth > toDate.dayOfMonth) {\n\t\t\t\t\tretval = \"vor \";\n\t\t\t\t} else {\n\t\t\t\t\tretval = \"in \";\n\t\t\t\t}\n\t\t\t\tretval = retval + pluralize(Math.abs(fromDate.dayOfMonth - toDate.dayOfMonth), \" Tag\");\n\t\t\t}\n        } else if(fromDate.month > toDate.month) {\n\t\t\tretval = \"vor \";\n\t\t\tlet days = fromDate.dayOfMonth - 1;\n\t\t\tlet months = 1;\n\t\t\tfor(let current = fromDate.month - 1; current != toDate.month; --current) {\n\t\t\t\tdays += calendar.months[current-1].days;\n\t\t\t\tif(!calendar.months[current-1].extra) {\n\t\t\t\t\tmonths += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(months > 1) {\n\t\t\t\tretval = retval + pluralize(months, \" Monat\");\n\t\t\t} else {\n\t\t\t\tdays += calendar.months[toDate.month-1].days - toDate.dayOfMonth + 1;\n\t\t\t\tretval = retval + pluralize(days, \" Tag\");\n\t\t\t}\n\t\t} else { //fromDate.month < toDate.month\n\t\t\tretval = \"in \";\n\t\t\tlet days = calendar.months[fromDate.month-1].days - fromDate.dayOfMonth;\n\t\t\tlet months = 1;\n\t\t\tfor(let current = fromDate.month + 1; current != toDate.month; ++current) {\n\t\t\t\tif(!calendar.months[current-1].extra) {\n\t\t\t\t\tmonths += 1;\n\t\t\t\t}\n\t\t\t\tdays += calendar.months[current-1].days;\n\t\t\t}\n\t\t\tif(months > 1) {\n\t\t\t\tretval = retval + pluralize(months, \" Monat\");\n\t\t\t} else {\n\t\t\t\tdays += toDate.dayOfMonth;\n\t\t\t\tretval = retval + pluralize(days, \" Tag\");\n\t\t\t}\n\t\t}\n    } else if(fromDate.year > toDate.year) {\n\t\tretval = \"vor \";\n\t\tif(fromDate.year > toDate.year + 1 || fromDate.month > toDate.month) {\n\t\t\tretval += pluralize(fromDate.year - toDate.year, \" Jahr\");\n\t\t} else {\n\t\t\tlet days = fromDate.dayOfMonth - 1;\n\t\t\tlet months = 1;\n\t\t\tfor(let current = fromDate.month - 1; current != toDate.month; --current) {\n\t\t\t\tif(current <= 0) {\n\t\t\t\t\tcurrent = calendar.months.length + 1;\n                    continue;\n\t\t\t\t}\n\t\t\t\tdays += calendar.months[current-1].days;\n\t\t\t\tif(!calendar.months[current-1].extra) {\n\t\t\t\t\tmonths += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(months > 1) {\n\t\t\t\tretval = retval + pluralize(months, \" Monat\");\n\t\t\t} else {\n\t\t\t\tdays += calendar.months[toDate.month-1].days - toDate.dayOfMonth + 1;\n\t\t\t\tretval = retval + pluralize(days, \" Tag\");\n\t\t\t}\n\t\t}\n\t} else { //fromDate.year < toDate.year\n\t\tretval = \"in \";\n\t\tif(fromDate.year + 1 < toDate.year || fromDate.month < toDate.month) {\n\t\t\tretval += pluralize(toDate.year - fromDate.year, \" Jahr\");\n\t\t} else {\n\t\t\tlet days = calendar.months[fromDate.month-1].days - fromDate.dayOfMonth;\n\t\t\tlet months = 1;\n\t\t\tfor(let current = fromDate.month + 1; current != toDate.month; ++current) {\n\t\t\t\tif(current > calendar.months.length) {\n\t\t\t\t\tcurrent = 0;\n                    continue;\n\t\t\t\t}\n\t\t\t\tif(!calendar.months[current-1].extra) {\n\t\t\t\t\tmonths += 1;\n\t\t\t\t}\n\t\t\t\tdays += calendar.months[current-1].days;\n\t\t\t}\n\t\t\tif(months > 1) {\n\t\t\t\tretval = retval + pluralize(months, \" Monat\");\n\t\t\t} else {\n\t\t\t\tdays += toDate.dayOfMonth;\n\t\t\t\tretval = retval + pluralize(days, \" Tag\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn retval;\n};\n\n})();","type":"application/javascript","title":"campaignDateDifference.js","tags":"$:/tags/Macro StoryToolbox","module-type":"macro","modified":"20210415155333841","created":"20210228232546084"},{"text":"/*\\\ntitle: campaignDateFormat\ntype: application/javascript\nmodule-type: macro\n\nTakes two dates and returns their difference in days\n\n\\*/\n(function(){\n\n\"use strict\";\n\n/*\nInformation about this macro\n*/\n\nexports.name = \"campaignDateFormat\";\n\nexports.params = [\n\t{name: \"date\", default: \"00000101\"},\n\t{name: \"format\", default: \"f Y\"}\n];\n\nfunction parseNat(str) {\n\treturn Math.max(Number.parseInt(str), 0);\n}\n\n/*\nRun the macro\n*/\nexports.run = function(date, format) {\n    const regex = /(?<year>-?\\d+)(?:-(?<month>\\d+)(?:-(?<day>\\d+)(?:,(?<hour>\\d{1,2})(?::(?<minute>\\d{1,2}))?)?)?)?/;\n    let m;\n\n    if((m = regex.exec(date)) === null) {\n      return \"invalid date: \"+date;\n    }\n\n    /*\n    let year = Number.parseInt(date.substring(0,4)) || 0;\n    let month = parseNat(date.substring(4,6)) || 1;\n    let dayOfMonth = parseNat(date.substring(6,8)) || 1;\n    let hour = parseNat(date.substring(8,10));\n    hour = isNaN(hour) ? 12 : hour;\n    let minute = parseNat(date.substring(10,12)) || 0;\n    */\n    \n    let year = Number.parseInt(m.groups.year);\n    let month = parseNat(m.groups.month) || 1;\n    let hasMonth = !!parseNat(m.groups.month);\n    let dayOfMonth = parseNat(m.groups.day) || 1;\n    let hasDay = !!parseNat(m.groups.day);\n    let hour = parseNat(m.groups.hour || \"12\");\n    let minute = parseNat(m.groups.minute) || 0;\n\n    let calendar = {};\n    try {\n\t    calendar = JSON.parse(this.wiki.getTextReference(\"Calendar.json\"));\n    } catch(err) {\n        return \"Invalid Calendar.json\";\n    }\n\n    if(month > calendar.months.length) {\n      return \"invalid month: \" + month;\n    }\n    if(dayOfMonth > calendar.months[month-1].days) {\n      return \"invalid day: \" + dayOfMonth + \" (of \" + calendar.months[month-1].days + \" in \" + month + \")\";\n    }\n    \n    if(hasMonth) {\n      if(calendar.months[month-1].days == 1 || !hasDay) {\n        format = format.replace(new RegExp('(?<!\\\\\\\\)f', 'g'), 'F');\n      } else {\n        format = format.replace(new RegExp('(?<!\\\\\\\\)f', 'g'), 'j. F');\n      }\n    } else {\n      format = format.replace(new RegExp('(?<!\\\\\\\\)f', 'g'), '');\n    }\n\n    let replacements = new Map();\n    replacements.set('j', String(dayOfMonth)); //0\n    replacements.set('d', String(dayOfMonth).padStart(2, '0')); //1\n    replacements.set('Y', (year < 0 ? '-' : '') + String(Math.abs(year)).padStart(2, '0')); //2\n    replacements.set('y', String(year)); //3\n    replacements.set('F', calendar.months[month-1].name || (month + \". Monat\"));\n    replacements.set('m', String(month).padStart(2, '0'));\n    replacements.set('n', String(month));\n    replacements.set('a', hour <= 12 ? '\\a\\m' : '\\p\\m');\n    replacements.set('g', String(((hour + 11) % 12) + 1));\n    replacements.set('G', String(hour));\n    replacements.set('h', String(((hour + 11) % 12) + 1).padStart(2, '0'));\n    replacements.set('H', String(hour).padStart(2, '0'));\n    replacements.set('i', String(minute).padStart(2, '0'));\n\n\tswitch (dayOfMonth % 10 + 1) {\n\t\tcase 1:\n\t\t\treplacements.set('S', 'st');\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\treplacements.set('S', 'nd');\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\treplacements.set('S', 'rd');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treplacements.set('S', 'th');\n\t}\n\treplacements.forEach((replacement, token) => {\n\t\treplacements.set('F', replacements.get('F').replace(new RegExp(token, 'gs'), '\\\\' + token));\n\t});\n\n\tlet formatted = format;\n\treplacements.forEach((replacement, token) => {\n\t\tformatted = formatted.replace(new RegExp('(?<!\\\\\\\\)' + token, 'g'), replacement);\n\t});\n\n\treturn formatted.replace(/\\\\(.)/g, '$1');\n};\n\n})();","type":"application/javascript","title":"campaignDateFormat.js","tags":"$:/tags/Macro StoryToolbox","module-type":"macro","modified":"20210415155347049","created":"20210228194412549"},{"text":"!! Format\n\n<<campaignDateFormat date:\"1472-06-16,11,23\" format:\"H:i U\\hr \\a\\m j.n.Y\" >>\n\n<$macrocall $name=\"campaignDateFormat\" date=\"1472-06-16\" />\n\n<<campaignDateFormat date:\"1472-06-16\" format:\"Y-m-d, H:i\" >>\n\n<$macrocall $name=\"campaignDateFormat\" date=\"1472-05-01\" />\n\n<$macrocall $name=\"campaignDateFormat\" date=\"1472-05\" />\n\n<$macrocall $name=\"campaignDateFormat\" date=\"1472-07\" />\n\n<$macrocall $name=\"campaignDateFormat\" date=\"1472\" />\n\n<$macrocall $name=\"campaignDateFormat\" date=\"abcdefg\" />\n\n<$macrocall $name=\"campaignDateFormat\" />\n\n!! Differences\n\n<$macrocall $name=\"campaignDateDifference\" from=\"1470-06-16\" to=\"1472-07-16\" /> == in 2 Jahren\n\n<$macrocall $name=\"campaignDateDifference\" from=\"1471-16-28\" to=\"1472-02-02\" /> == in 6 Tagen\n\n<$macrocall $name=\"campaignDateDifference\" from=\"1472-06-16\" to=\"1470-03-16\" />  == vor 2 Jahren\n\n<$macrocall $name=\"campaignDateDifference\" from=\"1472-06-16\" to=\"1471-03-16\" />  == vor 1 Jahr\n\n<$macrocall $name=\"campaignDateDifference\" from=\"1472-05-01\" to=\"1472-06-19\" />  == in 19 Tagen\n\n<$macrocall $name=\"campaignDateDifference\" from=\"1472-06-16\" to=\"1472-03-02\" /> == vor 2 Monaten\n\n<$macrocall $name=\"campaignDateDifference\" from=\"1472-06-16\" to=\"1472-06-16\" /> == heute\n\n<$macrocall $name=\"campaignDateDifference\" from=\"1472-06-16\" to=\"1472-01-01\" /> == vor 4 Monaten\n\n<$macrocall $name=\"campaignDateDifference\" from=\"1472-06-16\" to=\"1472-26-16\" /> == vor/in ungültiger Monat\n\n!! Ages\n\n<$macrocall $name=\"campaignDateAge\" date=\"1472-03-16\" birth=\"1470-06-16\" /> == 1 Jahr\n\n<$macrocall $name=\"campaignDateAge\" date=\"1472-06-16\" birth=\"1470-03-16\" />  == 2 Jahre\n\n<$macrocall $name=\"campaignDateAge\" date=\"1472-02-02\" birth=\"1471-16-28\" /> == 6 Tage\n\n<$macrocall $name=\"campaignDateAge\" date=\"1472-06-16\" birth=\"1471-03-16\" />  == 1 Jahr\n\n<$macrocall $name=\"campaignDateAge\" date=\"1472-05-01\" birth=\"1472-06-19\" />  == ---\n\n<$macrocall $name=\"campaignDateAge\" date=\"1472-06-16\" birth=\"1472-03-02\" /> == 2 Monate\n\n<$macrocall $name=\"campaignDateAge\" date=\"1472-06-16\" birth=\"1472-06-16\" /> == 0 Tage\n\n<$macrocall $name=\"campaignDateAge\" date=\"1472-06-16\" birth=\"1472-01-01\" /> == 4 Monate\n\n<$macrocall $name=\"campaignDateAge\" date=\"1472-06-16\" birth=\"1472-26-16\" /> == vor/in ungültiger Monat","title":"CampaignDateFormatTest","tags":"StoryToolbox","modified":"20210307161849943","created":"20210228211618332"},{"text":"Character","title":"CharacterAutomationTag","tags":"StoryToolbox","modified":"20210307142420807","created":"20210228150915338"},{"text":"<!-- Check tiddler tag. -->\n<$list filter=\"[<currentTiddler>tag{CharacterAutomationTag}]\">\n\n<$reveal type=\"match\" state=\"!!_reveal_story\" text=\"hide\">\n\n<$button set=\"!!_reveal_story\" setTo=\"show\">Story anzeigen</$button>\n\n</$reveal>\n<$reveal type=\"nomatch\" state=\"!!_reveal_story\" text=\"hide\">\n\n<$button set=\"!!_reveal_story\" setTo=\"hide\">Story verbergen</$button>\n\n<$list filter=\"[list[!!extra_backlinks]] [all[current]]\" />\n\n<<storyline filter:\"[list[!!extra_backlinks]backlinks[]] [all[current]backlinks[]]\">>\n\n</$reveal>\n\n<div style=\"clear:both;\"></div>\n\n</$list>","title":"CharacterStoryAutomation","tags":"$:/tags/ViewTemplate StoryToolbox","modified":"20210415195302928","list-after":"$:/core/ui/ViewTemplate/body","created":"20210228145026135"},{"text":"\\define newNPCActions()\n<$set name=\"tags\" filter=\"[[NPC]] [[Character]] [{$:/config/NewTiddler/Tags}]\">\n<$action-sendmessage $message=\"tm-new-tiddler\" tags=<<tags>> text={{NewNpcTemplate}} title=<<currentTiddler>> />\n</$set>\n\\end\n\\whitespace trim\n<$list filter=\"[all[current]is[missing]]\">\n<$button actions=<<newNPCActions>> tooltip=\"Neuen NPC erstellen\" >\nNPC hinzufügen\n</$button>\n</$list>","title":"CreateCharacterButton","tags":"$:/tags/ViewTemplate StoryToolbox","modified":"20210412172120641","list-after":"$:/core/ui/ViewTemplate/body","created":"20210412171621105"},{"text":"<!--\n  file-alt icon from FontAwesome\n  Licensed under Creative Commons Attribution 4.0 International\n  https://fontawesome.com/license\n\n  Modified by removing fill and setting TiddlyWiki classes, height, and width.\n-->\n<svg aria-hidden=\"true\" data-prefix=\"fas\" data-icon=\"file-alt\" class=\"tc-image-button\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" width=\"22pt\" height=\"22pt\"><path d=\"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 236c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-64c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-72v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm96-114.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"></path></svg>","title":"file-alt-solid.svg","tags":"StoryToolbox","modified":"20210307142420807","created":"20210228175648122"},{"text":"\\define icdate() {{StoryDate!!icyear}}-{{StoryDate!!icmonth}}-{{StoryDate!!icday}},{{StoryDate!!ichour}}:{{StoryDate!!icminute}}\n\\whitespace trim\n<$list filter=\"[all[current]has[icdate]]\">\n<$wikify name=\"mydate\" text=<<icdate>>>\n<span style=\"float:right; display:inline-block;\"><$macrocall $name=\"campaignDateDifference\" from=<<mydate>> to={{!!icdate}} />&nbsp;-&nbsp;<$macrocall $name=\"campaignDateFormat\" date={{!!icdate}} /><$list filter=\"[all[current]tag[Vollmond]]\">&nbsp;[img height=12 [Vollmond]]</$list><$list filter=\"[all[current]tag[Neumond]]\">&nbsp;[img height=12 [Neumond]]</$list><$list filter=\"[all[current]tag[MondZ]]\">&nbsp;[img height=12 [MondZ]]</$list><$list filter=\"[all[current]tag[MondA]]\">&nbsp;[img height=12 [MondA]]</$list></span>\n</$wikify>\n</$list>","title":"IcDateDisplay","tags":"$:/tags/ViewTemplate StoryToolbox","modified":"20210415152853399","list-after":"$:/core/ui/ViewTemplate/subtitle","created":"20210412171354045"},{"text":"\\whitespace trim\n<!-- Check tiddler tag. -->\n<$list filter=\"[<currentTiddler>tag{CharacterAutomationTag}]\">\n\n<div class=\"infobox\" style=\"float:right;\">\n<table>\n<$list filter=\"[<currentTiddler>has[image]]\">\n<tr><td colspan=2 style=\"padding:0; background: none;\"><$image source={{!!image}} maxwidth=100% /></td></tr>\n</$list>\n<$list filter=\"[<currentTiddler>has[name]]\">\n<tr><td colspan=2 class=\"name\"><span style=\"font-weight:bold;\">{{!!name}}</span></td></tr>\n</$list>\n<$list filter=\"[<currentTiddler>!has[name]]\">\n<tr><td colspan=2><span style=\"font-weight:bold;\">{{!!title}}</span></td></tr>\n</$list>\n<$list filter=\"[<currentTiddler>has[age]]\">\n<tr><td>Alter:</td><td>{{!!age}}</td></tr>\n</$list>\n<$list filter=\"[<currentTiddler>has[birthday]]\">\n<tr><td>Geburtsdatum:</td><td><$macrocall $name=\"campaignDateFormat\" date={{!!birthday}} /></td></tr>\n<$wikify name=\"mydate\" text=\"{{StoryDate!!icyear}}-{{StoryDate!!icmonth}}-{{StoryDate!!icday}}\">\n<tr><td>Alter:</td><td><$macrocall $name=\"campaignDateAge\" date=<<mydate>> birth={{!!birthday}} /></td></tr>\n</$wikify>\n</$list>\n<$list filter=\"[<currentTiddler>has[alignment]]\">\n<tr><td>Alignment:</td><td>{{!!alignment}}</td></tr>\n</$list>\n</table>\n</div>\n\n</$list>","title":"Infoboxen","tags":"$:/tags/ViewTemplate StoryToolbox","modified":"20210412205520122","list-before":"$:/core/ui/ViewTemplate/body","created":"20210227173404678"},{"text":"\\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline html\n\n.infobox img {\n  vertical-align: middle;\n}\n\n.infobox {\n  float:right;\n  background: none;\n  font-size:100%;\n  text-align: left;\n  vertical-align: middle;\n  margin-left: 2em;\n}\n\n.infobox table {\n  width: 250px;\n  border: none;\n  border-collapse: separate;\n  border-spacing: 2px;\n}\n\n.infobox td {\n  border: none;\n  background: #ddd;\n  border-spacing: 2px;\n  padding: 4px 7px;\n}\n\n.infobox td:not(:only-of-type):first-of-type {\n  width: 40%;\n}\n.infobox td:not(:only-of-type):last-of-type {\n  width: 60%;\n}\n\n.infobox .name {\n  font-size: 1.2em;\n  font-weight: bold;\n}\n\n.infobox td[colspan=\"2\"] {\n  font-weight: bold;\n  background-color: #66d;\n  text-align: center;\n}\n\n.tc-tiddler-body {\n  clear: left !important;\n}","type":"text/vnd.tiddlywiki","title":"InfoboxStyles","tags":"$:/tags/Stylesheet StoryToolbox","modified":"20210413152925617","created":"20210228154248133"},{"text":"\\define icdate() {{StoryDate!!icyear}}-{{StoryDate!!icmonth}}-{{StoryDate!!icday}},{{StoryDate!!ichour}}:{{StoryDate!!icminute}}\n\n<$wikify name=\"mydate\" text=<<icdate>>>\n''Jetzt:'' <$macrocall $name=\"campaignDateFormat\" date=<<mydate>> />\n</$wikify>\n\n<div class=\"date-input-container\">\n<$edit-text tiddler=\"StoryDate\" field=\"icyear\" size=5 class=\"date-input\" maxlength=5/>-<$edit-text tiddler=\"StoryDate\" field=\"icmonth\" size=2 class=\"date-input\"/>-<$edit-text tiddler=\"StoryDate\" field=\"icday\" size=2 class=\"date-input\"/>, <$edit-text tiddler=\"StoryDate\" field=\"ichour\" size=2 class=\"date-input\"/>:<$edit-text tiddler=\"StoryDate\" field=\"icminute\" size=2 class=\"date-input\"/>\n</div>\n","title":"SidebarRpgTools","tags":"$:/tags/SideBarSegment StoryToolbox","modified":"20210307142420811","list-before":"$:/core/ui/SideBarSegments/page-controls","created":"20210228104422842","_time_edit":"show"},{"text":"\\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline html\n\ninput.date-input {\n  background: transparent;\n  padding: 1px;\n  border: none;\n  text-align: center;\n}\ninput.date-input[size=\"5\"] {\n  width:2.8em;\n}\ninput.date-input[size=\"2\"] {\n  width:1.4em;\n}\n\n.date-input-container {\n  display: inline-block;\n  background: transparent;\n  padding: 1px;\n  border: 1px solid <<colour tab-border>>;\n  border-radius: .4em;\n}","type":"text/vnd.tiddlywiki","title":"SidebarRpgToolsStyle","tags":"StoryToolbox $:/tags/Stylesheet","modified":"20210307142420813","created":"20210303233747305"},{"text":"/**\n * A filter operator to sort by ic date.\n * Still need to set the tiddler type to application/javascript to make it actually do something.\n */\n(function(){\n\"use strict\";\n \nfunction parseNat(str) {\n\treturn Math.max(Number.parseInt(str), 0);\n}\n\nexports.sorticdate= function(source, operator, options) {\n    let results = [];\n    source(function(tiddler,title) {\n        results.push(tiddler);\n    });\n\n    const regex = /(?<year>-?\\d+)(?:-(?<month>\\d+)(?:-(?<day>\\d+)(?:,(?<hour>\\d{1,2})(?::(?<minute>\\d{1,2}))?)?)?)?/;\n\n    let sortResult = results.sort(function(tiddlerA, tiddlerB) {\n\t\tlet m;\n\n\t\tif(tiddlerA && tiddlerA.fields.icdate && (m = regex.exec(tiddlerA.fields.icdate)) === null) {\n            console.log(\"Invalid Date found \" + dateA);\n\t\t\treturn 100; //sort invalid dates to the end\n\t\t}\n\n\t\tlet fromDate = {year: Number.parseInt(m.groups.year),\n\t\t\tmonth: parseNat(m.groups.month) || 1,\n\t\t\tdayOfMonth: parseNat(m.groups.day) || 1,\n\t\t\thour: parseNat(m.groups.hour || \"12\"),\n\t\t\tminute: parseNat(m.groups.minute) || 0\n\t\t};\n\n\t\tif(tiddlerB && tiddlerB.fields.icdate && (m = regex.exec(tiddlerB.fields.icdate)) === null) {\n            console.log(\"Invalid Date found \" + dateB);\n\t\t\treturn -100; //sort invalid dates to the end\n\t\t}\n\n\t\tlet toDate = {year: Number.parseInt(m.groups.year),\n\t\t\tmonth: parseNat(m.groups.month) || 1,\n\t\t\tdayOfMonth: parseNat(m.groups.day) || 1,\n\t\t\thour: parseNat(m.groups.hour || \"12\"),\n\t\t\tminute: parseNat(m.groups.minute) || 0\n\t\t};\n\t\t\n        if(fromDate.year != toDate.year) {\n\t\t\treturn fromDate.year - toDate.year;\n\t\t}\n\t\tif(fromDate.month != toDate.month) {\n\t\t\treturn fromDate.month - toDate.month;\n\t\t}\n\t\tif(fromDate.dayOfMonth != toDate.dayOfMonth) {\n\t\t\treturn fromDate.dayOfMonth - toDate.dayOfMonth;\n\t\t}\n\t\tif(fromDate.hour != toDate.hour) {\n\t\t\treturn fromDate.hour - toDate.hour;\n\t\t}\n\t\tif(fromDate.minute != toDate.minute) {\n\t\t\treturn fromDate.minute - toDate.minute;\n\t\t}\n\t\treturn 0;\n    });\n    if(operator.prefix === \"!\") {\n        return sortResult.map(function(tiddler) { return tiddler.fields.title; } ).reverse();\n    } else {\n        return sortResult.map(function(tiddler) { return tiddler.fields.title; } );\n    }\n}\n})();","type":"application/javascript","title":"SortIcdate.js","tags":"StoryToolbox","module-type":"filteroperator","modified":"20210415205712705","created":"20210415201601334"},{"text":"<$wikify name=\"mydate\" text=\"{{!!icyear}}-{{!!icmonth}}-{{!!icday}},{{!!ichour}}:{{!!icminute}}\">\n<<mydate>>\n</$wikify>","title":"StoryDate","tags":"StoryToolbox","modified":"20210415191207434","icyear":"1492","icmonth":"09","icminute":"00","ichour":"12","icday":"14","created":"20210228004359076"},{"text":"\\define storyline(filter)\n<$list filter=\"$filter$ +[tag[Story]!has:field[draft.of]sorticdate[icdate]] ~[[NichtsLosBisher]]\">\n{{||StorySectionTemplate}}\n</$list>\n\\end","title":"StorylineMacro","tags":"StoryToolbox $:/tags/Macro","modified":"20210415203248824","created":"20210227232150872"},{"text":"\\define icdate() {{StoryDate!!icyear}}-{{StoryDate!!icmonth}}-{{StoryDate!!icday}},{{StoryDate!!ichour}}:{{StoryDate!!icminute}}\n<div>\n<$wikify name=\"mydate\" text=<<icdate>>>\n<h3><$link/><span style=\"float:right; display:inline-block;\"><$macrocall $name=\"campaignDateDifference\" from=<<mydate>> to={{!!icdate}} /> - <$macrocall $name=\"campaignDateFormat\" date={{!!icdate}} /><$list filter=\"[all[current]tag[Vollmond]]\">&nbsp;[img height=12 [Vollmond]]</$list><$list filter=\"[all[current]tag[Neumond]]\">&nbsp;[img height=12 [Neumond]]</$list><$list filter=\"[all[current]tag[MondZ]]\">&nbsp;[img height=12 [MondZ]]</$list><$list filter=\"[all[current]tag[MondA]]\">&nbsp;[img height=12 [MondA]]</$list></span></h3>\n</$wikify>\n{{!!text}}\n</div>","type":"text/vnd.tiddlywiki","title":"StorySectionTemplate","tags":"StoryToolbox","modified":"20210412161721888","created":"20210227225004109"},{"text":"<!--\n  user-plus-solid icon from FontAwesome\n  Licensed under Creative Commons Attribution 4.0 International\n  https://fontawesome.com/license\n\n  Modified by removing fill and setting TiddlyWiki classes, height, and width.\n-->\n<svg aria-hidden=\"true\" data-prefix=\"fas\" data-icon=\"user-plus\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\" class=\"tc-image-button\" width=\"22pt\" height=\"22pt\"><path d=\"M624 208h-64v-64c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v64h-64c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h64v64c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-64h64c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"></path></svg>","title":"user-plus-solid.svg","tags":"StoryToolbox","modified":"20210307142420814","created":"20210228180544625"},{"text":"<div style=\"clear:both;\"></div>","title":"Clearfix","tags":"StoryToolbox $:/tags/ViewTemplate","modified":"20210415151331254","list-after":"","created":"20210413152935894"},{"text":"! Storylines\nStorylinies sind automatisch erstelle Listen, die nach In-Character-Datum geordnet werden und den Tag [[Story]] haben.\n\nDie vollständige Story kann mit folgendem Makro angezeigt werden:\n\n```\n<<storyline filter:\"[tag[Story]]\">>\n```\n\nFilter kann dabei beliebig sein und wird automatisch um die Einschränkung auf den Story Tag und die korrekte Sortierung ergänzt.\nBeispielsweise könnten die folgenden Makros verwendet werden um alle Storyeinträge mit dem Tag Party, dem Tag Chapter 1 bzw. mit einem Link auf den aktuellen Tiddler aufzulisten.\n\n```\n<<storyline filter:\"[tag[Party]]\">>\n<<storyline filter:\"[tag[Chapter 1]]\">>\n<<storyline filter:\"[all[current]backlinks[]]\">>\n```\n\n! Charaktere\nTiddlern mit dem Tag [[Character]] werden automatisch mit einer ausklappbaren Story am Ende versehen. Diese enthält alle Storyeinträge mit einem Link auf den Tiddler. Um das anzupassen oder auszuschalten muss der Tiddler CharacterStoryAutomation bearbeitet werden.\n\nAußerdem erhalten alle Charaktere eine [[Infobox|Infoboxen]], die aus Feldern des Tiddlers gefüllt werden. Dabei gibt es die Möglichkeit automatisch das Alter des Charakters aus einem Geburtsdatum zu berechnen. Aktuell werden die Felder `image` (Bild vom Charakter), `name` (Falls abweichend vom Titel), `age` (feste Altersangabe), `birthday` (Geburtsdatum und automatisch berechnetes Alter) und `alignment` unterstützt.\n\n! Daten\nDaten innerhalb der Spielwelt können ebenfalls verwaltet werden. Daten haben intern immer das Format `Jahr-Tag-Monat,Stunde:Minute`. Dabei ist Jahr eine positive oder negative Zahl, Tag und Monat sind positive Zahlen, die nach dem Kalender gültige Tag oder Monate sind. Stunde und Minute sind zweistellige, positive Zahlen.\n\nDaten werden an verschiedenen Stellen verwendet. So gibt es das aktuelle Datum (wird in der Sidebar angezeigt), Storyeinträge haben Daten, Charaktere können Geburtsdaten haben. Außerdem können Daten mit den unten beschriebenen Makros an beliebigen weiteren Stellen verwendet werden.\n\n!! Kalender\nFantasywelten haben oft ihre eigenen Kalender. In [[Calendar.json]] muss der verwendete Kalender definiert werden. Aktuell wird nur die Liste der Monate `months` verwendet. Andere Felder werden ignoriert.\n\nEin Monat hat die Eigenschaften `days` (Tage in diesem Monat) und `name` (Anzeigename). Optional noch das Feld `extra`. Wenn dieses den Wert `true` hat, zählt der Monat nicht als vollwertiger Monat und wird bei der Berechnung von Zeitdifferenzen nicht als Monat gezählt.\n\nSchaltjahre werden aktuell nicht unterstützt.\n\n!!! Simplified Gregorian\nDieser Kalender ist eine vereinfachte Version des gregorianischen Kalenders ohne Schaltjahre.\n\n```\n{\n  \"daysInAWeek\": 7,\n  \"months\": [\n    {\"name\": \"January\", \"days\": 31},\n    {\"name\": \"February\", \"days\": 28},\n    {\"name\": \"March\", \"days\": 31},\n    {\"name\": \"April\", \"days\": 30},\n    {\"name\": \"May\", \"days\": 31},\n    {\"name\": \"June\", \"days\": 30},\n    {\"name\": \"July\", \"days\": 31},\n    {\"name\": \"August\", \"days\": 31},\n    {\"name\": \"September\", \"days\": 30},\n    {\"name\": \"October\", \"days\": 31},\n    {\"name\": \"November\", \"days\": 30},\n    {\"name\": \"December\", \"days\": 31}\n  ]\n}\n```\n\n!!! Solar 12 Months\nDieser Kalender hat 12 gleich lange Monate, Sonnenwende und Tag-Nacht-Gleichheit als Zusatztage und einen eigenständigen Neujahrstag.\n\nHier sieht man die Funktionsweise der extra Monate.\n\n```\n{\n  \"daysInAWeek\": 10,\n  \"months\": [\n    {\"name\": \"Neujahr\", \"days\": 1, \"extra\": true},\n    {\"name\": \"1. Monat\", \"days\": 30},\n    {\"name\": \"2. Monat\", \"days\": 30},\n    {\"name\": \"3. Monat\", \"days\": 30},\n    {\"name\": \"Frühlingsanfang\", \"days\": 1, \"extra\": true},\n    {\"name\": \"4. Monat\", \"days\": 30},\n    {\"name\": \"5. Monat\", \"days\": 30},\n    {\"name\": \"6. Monat\", \"days\": 30},\n    {\"name\": \"Sommersonnenwende\", \"days\": 1, \"extra\": true},\n    {\"name\": \"7. Monat\", \"days\": 30},\n    {\"name\": \"8. Monat\", \"days\": 30},\n    {\"name\": \"9. Monat\", \"days\": 30},\n    {\"name\": \"Herbstanfang\", \"days\": 1, \"extra\": true},\n    {\"name\": \"10. Monat\", \"days\": 30},\n    {\"name\": \"11. Monat\", \"days\": 30},\n    {\"name\": \"12. Monat\", \"days\": 30},\n    {\"name\": \"Wintersonnenwende\", \"days\": 1, \"extra\": true}\n  ],\n}\n```\n\n!!! French Republican Calendar\nDieser Kalender wurde zeitweise nach der Französischen Revolution genutzt, mit dem Ziel einen aus der Natur begründeten, regelmäßigen Kalender als Teil des Metrischen Systems zu definieren. Leider ist die Dauer eines Jahres aber so eine krumme Zahle, dass es scheiterte. Er demonstriert aber gut extra Monate mit mehr als einem Tag.\n\n```\n{\n  \"daysInAWeek\": 10,\n  \"months\": [\n    {\"name\": \"Vendémiaire\", \"days\": 30},\n    {\"name\": \"Brumaire\", \"days\": 30},\n    {\"name\": \"Frimaire\", \"days\": 30},\n    {\"name\": \"Nivôse\", \"days\": 30},\n    {\"name\": \"Pluviôse\", \"days\": 30},\n    {\"name\": \"Ventôse\", \"days\": 30},\n    {\"name\": \"Germinal\", \"days\": 30},\n    {\"name\": \"Floréal\", \"days\": 30},\n    {\"name\": \"Prairial\", \"days\": 30},\n    {\"name\": \"Messidor\", \"days\": 30},\n    {\"name\": \"Thermidor\", \"days\": 30},\n    {\"name\": \"Fructidor\", \"days\": 30},\n    {\"name\": \"Sansculottides\", \"days\": 5, \"extra\": true}\n  ],\n}\n```\n\n!!! Hobbit Kalender\nDer Hobbit oder Auenland Kalender demonstriert, dass auch mehrere extra Monate aufeinander folgen können.\n\n```\n{\n  \"daysInAWeek\": 10,\n  \"months\": [\n    {\"name\": \"2. Yule\", \"days\": 1, \"extra\": true},\n    {\"name\": \"Afteryule\", \"days\": 30},\n    {\"name\": \"Solmath\", \"days\": 30},\n    {\"name\": \"Rethe\", \"days\": 30},\n    {\"name\": \"Astron\", \"days\": 30},\n    {\"name\": \"Thrimidge\", \"days\": 30},\n    {\"name\": \"Forelithe\", \"days\": 30},\n    {\"name\": \"1. Lithe\", \"days\": 1, \"extra\": true},\n    {\"name\": \"Mid-year's Day\", \"days\": 1, \"extra\": true},\n    {\"name\": \"2. Lithe\", \"days\": 1, \"extra\": true},\n    {\"name\": \"Afterlithe\", \"days\": 30},\n    {\"name\": \"Wedmath\", \"days\": 30},\n    {\"name\": \"Halimath\", \"days\": 30},\n    {\"name\": \"Winterfilth\", \"days\": 30},\n    {\"name\": \"Blotmath\", \"days\": 30},\n    {\"name\": \"Foreyule\", \"days\": 30},\n    {\"name\": \"1. Yule\", \"days\": 1, \"extra\": true}\n  ],\n}\n```\n\n!! Datumsmakros\n\nCampaignDateFormatTest zeigt einige der Datumsmakros in Aktion.\n\n!!! Daten formatieren\nMit dem [[campaignDateFormat|campaignDateFormat.js]] Makro werden Daten formatiert. Das Makro hat zwei Parameter: \n\n; `date`\n: Das zu formatierende Datum im Format `Jahr-Monat-Tag,Stunde:Minute` wie weiter oben beschrieben. Die Datumsangabe kann dabei beliebig gekürzt werden, nur das Jahr ist verpflichtend. Nicht benötigte Trennzeichen müssen weggelassen werden `Jahr-Monat` wäre also auch zulässig. Es dürfen aber keine Teile aus der Mitte fehlen.\n; `format`\n: Eine Formatangabe. In diesem Text werden einige Buchstaben durch Teile des Datums ersetzt. Soll ein Buchstabe mit spezieller Bedeutung stehen bleiben, so muss `\\` vorangestellt werden. Wird kein Format angegeben ist das Standardformat `f Y`.\n\nFolgende Buchstaben im Format haben eine spezielle Bedeutung:\n\n|Buchstabe|Bedeutung|Beispiel|h\n|Y|Jahr mit mindestens zwei Stellen|05, 99, 1473, -03|\n|y|Jahr|5, 99, 1573, -3|\n|m|Monat mit mindestens zwei Stellen|01, 12|\n|n|Monat|1, 12|\n|F|Name des Monats|Januar, Frühlingsanfang|\n|f|Intelligenter Monat und Tag|1. Januar, Frühlingsanfang|\n|j|Tag|2, 23, 18|\n|d|Tag mit mindestens zwei Stellen|02, 23, 128|\n|S|Englische Ordinalendung für den Tag|st, nd, rd, th|\n|g|12-Stunden Stunde|3, 11|\n|G|24-Stunden Stunde|3, 23|\n|h|12-Stunden Stunde zweistellig|03, 11|\n|H|24-Stunden Stunde zweistellig|03, 23|\n|a|am oder pm||\n|i|Minute zweistellig|04, 42|\n\n''Intelligenter Monat und Tag:'' Der Buchstabe `f` im Format wird je nach Situation durch `F`, `j. F` oder nichts ersetzt. Nichts, falls die Datumsangabe keinen Monat enthielt. `F`, falls die Datumsangabe keinen Tag enthielt oder der Monat nur einen Tag hat. Sonst immter `j. F`.\n\n```\n<<campaignDateFormat date:\"1472-06-16\" format:\"Y-m-d, H:i\" >>\n<<campaignDateFormat date:\"1472-06-16,11,23\" format:\"H:i U\\hr \\a\\m j.n.Y\" >>\n<<campaignDateFormat date:\"1472-06-16\" >>\n```\n\nSollen Felder verwendet werden muss wie üblich das Macrocall Widget verwendet werden.\n\n```\n<$macrocall $name=\"campaignDateFormat\" date={{!!myDate}} />\n```\n\n!!! Datumsdifferenzen\nMit dem [[campaignDateDifference|campaignDateDifference.js]] Makro `<<campaignDateDifference from:\"1470-06-16\" to:\"1472-07-16\" >>`  kann die grobe Differenz zwischen zwei Daten angegeben werden. Die Differenz wird dabei höchstens auf den Tag genau berechnet. Stunden und Minuten werden ignoriert.\n\nFalls die Daten weniger als einen nicht-extra Monat auseinander liegen, dann wird die Differenz in Tagen angegeben. Bei weniger als einem vollen Jahr Differenz ist die Angabe in Monaten, sonst in Jahren.\n\nAls Variante gibt es noch das [[campaignDateAge|campaignDateAge.js]] Makro `<<campaignDateAge date:\"1470-06-16\" age:\"1472-07-16\" >>` . Dieses gibt lediglich negative Differenzen aus und hat etwas andere Texte.\n\n! Sidebar Tools\nIn der Sidebar gibt es zum einen ein Feld für das aktuelle Datum und ein Feld um es zu bearbeiten. Zum anderen Gibt es ein Feld um einen neuen Character Tiddler hinzuzufügen und um einen neuen Storyeintrag hinzuzufügen. In beiden Fällen werden automatisch Tags und ein paar Felder angelegt.\n\n! Sonstiges\nAlle Tiddler, die zur Story Toolbox gehören sind mit diesem Tiddler getaggt. Man findet alle (z.B. zum exportieren) mit dem Filter `[tag[StoryToolbox]] [[StoryToolbox]]`","title":"StoryToolbox","tags":"","modified":"20210412172339938","created":"20210228152250246","color":"#c0c0c0"},{"text":"! Aktuelle Party\n* LutHelder\n* DrakHammerhand\n* MiltonRaupenstein\n* GarettWebersson\n\n! Story der Party\n<$reveal type=\"match\" state=\"!!_reveal_story\" text=\"hide\">\n\n<$button set=\"!!_reveal_story\" setTo=\"show\">Story anzeigen</$button>\n\n</$reveal>\n<$reveal type=\"nomatch\" state=\"!!_reveal_story\" text=\"hide\">\n\n<$button set=\"!!_reveal_story\" setTo=\"hide\">Story verbergen</$button>\n\n<<storyline filter:\"[all[current]backlinks[]] [all[current]tagging[]]\">>\n\n</$reveal>","title":"Party","tags":"Allgemein","modified":"20210415161314721","created":"20210309223832722","_reveal_story":"show"},{"text":"<$list filter=\"[tag[Story]!has:field[draft.of]!sorticdate[]first[10]]\">\n{{||StorySectionTemplate}}\n</$list>\n\n[[mehr...|Story]]","title":"Neuste Story","tags":"","modified":"20210415205819416","created":"20210309223442674"},{"text":"<<storyline filter:\"[[Vollmond]] [[MondZ]] [[MondA]] [[Neumond]] +[tagging[]]\">>","title":"Mond","tags":"Allgemein","modified":"20210412162616102","created":"20210412154903712","color":"#c2d9dc"},{"text":"iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA2RpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoxOEJBNkVERUE4OUJFQjExOTExRkQ4RjVENzdBQTRCMSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDo4RTQyQ0M1MjlCQTkxMUVCODM2M0M4NzcwMkFFNzgxQyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo4RTQyQ0M1MTlCQTkxMUVCODM2M0M4NzcwMkFFNzgxQyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDoxOUJBNkVERUE4OUJFQjExOTExRkQ4RjVENzdBQTRCMSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDoxOEJBNkVERUE4OUJFQjExOTExRkQ4RjVENzdBQTRCMSIvPiA8L3JkZjpEZXNjcmlwdGlv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","type":"image/png","title":"MondA","tags":"Mond","modified":"20210412161436531","created":"20210412161311436","color":"#c2d9dc"},{"text":"iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA2RpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoxOEJBNkVERUE4OUJFQjExOTExRkQ4RjVENzdBQTRCMSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDo4NTJGQkZCRDlCQTkxMUVCQjc4MEU4MjgyNUNERTM5QSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo4NTJGQkZCQzlCQTkxMUVCQjc4MEU4MjgyNUNERTM5QSIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDoxOUJBNkVERUE4OUJFQjExOTExRkQ4RjVENzdBQTRCMSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDoxOEJBNkVERUE4OUJFQjExOTExRkQ4RjVENzdBQTRCMSIvPiA8L3JkZjpEZXNjcmlwdGlv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","type":"image/png","title":"MondZ","tags":"Mond","modified":"20210412161443857","created":"20210412161319801","color":"#c2d9dc"},{"text":"iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA2RpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoxOEJBNkVERUE4OUJFQjExOTExRkQ4RjVENzdBQTRCMSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDpBQTUzNzZFNDlCQTkxMUVCQTM3NTg4MUQ1MEFFOTBFMSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpBQTUzNzZFMzlCQTkxMUVCQTM3NTg4MUQ1MEFFOTBFMSIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDoxOUJBNkVERUE4OUJFQjExOTExRkQ4RjVENzdBQTRCMSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDoxOEJBNkVERUE4OUJFQjExOTExRkQ4RjVENzdBQTRCMSIvPiA8L3JkZjpEZXNjcmlwdGlv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","type":"image/png","title":"Neumond","tags":"Mond","modified":"20210412161450172","created":"20210412161325463","color":"#c2d9dc"},{"text":"iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA2RpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoxOEJBNkVERUE4OUJFQjExOTExRkQ4RjVENzdBQTRCMSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDo5OTgyMzJGQTlCQTkxMUVCOUU2RjhDOTgyQTM0Q0M4NyIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo5OTgyMzJGOTlCQTkxMUVCOUU2RjhDOTgyQTM0Q0M4NyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDoxOUJBNkVERUE4OUJFQjExOTExRkQ4RjVENzdBQTRCMSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDoxOEJBNkVERUE4OUJFQjExOTExRkQ4RjVENzdBQTRCMSIvPiA8L3JkZjpEZXNjcmlwdGlv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","type":"image/png","title":"Vollmond","tags":"Mond","modified":"20210412161430596","created":"20210412161244205","color":"#c2d9dc"}]